// ********RoostGPT********
// Test generated by RoostGPT for test checkNodejsDepsInstalled using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
const express = require('express');
const request = require('supertest');
const bodyParser = require('body-parser');
const cors = require('cors');
const mongoose = require('mongoose');
const todoRoutes = express.Router();
const PORT = 4000;

let Todo = require('./todo.model')

const app = express();
app.use(bodyParser.json());
app.use(cors());
app.use('/todos', todoRoutes);

todoRoutes.route('/').get(function (req, res) {
  Todo.find(function (err, todos) {
    if (err) {
      console.log(err);
    } else {
      res.json(todos);
    }
  });
});

describe('GET /todos', () => {
  beforeAll(done => {
    mongoose.connect('mongodb://localhost/testDB', { useNewUrlParser: true })
      .then(() => done())
      .catch((err) => done(err));
  });

  afterAll(done => {
    mongoose.connection.close()
      .then(() => done())
      .catch((err) => done(err));
  });

  it('should get all todos', async () => {
    const res = await request(app).get('/todos');
    expect(res.statusCode).toEqual(200);
    expect(res.body).toHaveProperty('todos');
  });

  it('should handle database errors', async () => {
    Todo.find = jest.fn().mockImplementationOnce((callback) => {
      callback(true, {});
    });

    const res = await request(app).get('/todos');
    expect(res.statusCode).toEqual(500);
  });
});
